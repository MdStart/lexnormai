"""Add mapping_result table

Revision ID: 3e5cb4cc8662
Revises: 
Create Date: 2025-06-24 03:29:16.958927

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3e5cb4cc8662'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mapping_result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('settings_id', sa.Integer(), nullable=True),
    sa.Column('job_role_filter', sa.String(length=255), nullable=True),
    sa.Column('mapping_data', sa.JSON(), nullable=False),
    sa.Column('overall_confidence_score', sa.String(length=10), nullable=True),
    sa.Column('standards_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['content_id'], ['course_content.id'], ),
    sa.ForeignKeyConstraint(['settings_id'], ['lexnorm_settings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mapping_result_id'), 'mapping_result', ['id'], unique=False)
    op.drop_index(op.f('idx_course_content_created_at'), table_name='course_content')
    op.drop_index(op.f('idx_course_content_title'), table_name='course_content')
    op.create_index(op.f('ix_course_content_id'), 'course_content', ['id'], unique=False)
    op.drop_index(op.f('idx_lex_norm_standard_job_role'), table_name='lex_norm_standard')
    op.drop_index(op.f('idx_lex_norm_standard_nos_code'), table_name='lex_norm_standard')
    op.drop_index(op.f('idx_lex_norm_standard_pc_code'), table_name='lex_norm_standard')
    op.create_index(op.f('ix_lex_norm_standard_id'), 'lex_norm_standard', ['id'], unique=False)
    op.alter_column('lexnorm_settings', 'task_type',
               existing_type=postgresql.ENUM('content_summary', 'content_mapping', name='task_type_enum'),
               type_=sa.String(length=50),
               existing_nullable=True,
               existing_server_default=sa.text("'content_summary'::task_type_enum"))
    op.create_index(op.f('ix_lexnorm_settings_id'), 'lexnorm_settings', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_lexnorm_settings_id'), table_name='lexnorm_settings')
    op.alter_column('lexnorm_settings', 'task_type',
               existing_type=sa.String(length=50),
               type_=postgresql.ENUM('content_summary', 'content_mapping', name='task_type_enum'),
               existing_nullable=True,
               existing_server_default=sa.text("'content_summary'::task_type_enum"))
    op.drop_index(op.f('ix_lex_norm_standard_id'), table_name='lex_norm_standard')
    op.create_index(op.f('idx_lex_norm_standard_pc_code'), 'lex_norm_standard', ['pc_code'], unique=False)
    op.create_index(op.f('idx_lex_norm_standard_nos_code'), 'lex_norm_standard', ['nos_code'], unique=False)
    op.create_index(op.f('idx_lex_norm_standard_job_role'), 'lex_norm_standard', ['job_role'], unique=False)
    op.drop_index(op.f('ix_course_content_id'), table_name='course_content')
    op.create_index(op.f('idx_course_content_title'), 'course_content', ['title'], unique=False)
    op.create_index(op.f('idx_course_content_created_at'), 'course_content', ['created_at'], unique=False)
    op.drop_index(op.f('ix_mapping_result_id'), table_name='mapping_result')
    op.drop_table('mapping_result')
    # ### end Alembic commands ###
